{"version":3,"file":"js/main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;+CCLA;;;;;;AADA;AAEA;AAEA;CAGA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAA/B;AACA,IAAIC,gBAAgB,GAAGJ,QAAQ,CAACK,MAAT,CAAgB,2BAAhB,CAAvB;AACA,IAAIC,IAAI,GAAGL,MAAM,CAACC,QAAP,CAAgBK,QAA3B;AAEA,IAAIC,IAAI,GAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACI,MAAL,GAAY,CAA9B,CAAX;AACAF,IAAI,GAAGA,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACG,WAAL,CAAiB,GAAjB,IAAsB,CAArC,CAAP,EAEA;;AACA,IAAIC,SAAS,GAAGN,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBH,IAAI,CAACK,WAAL,CAAiB,GAAjB,CAAlB,CAAhB;AACAC,SAAS,GAAGA,SAAS,CAACH,SAAV,CAAoBG,SAAS,CAACC,OAAV,CAAkB,GAAlB,IAAuB,CAA3C,EAA8CD,SAAS,CAACD,WAAV,CAAsB,GAAtB,CAA9C,CAAZ;AAEA,IAAIC,SAAS,IAAI,GAAjB,EACAA,SAAS,GAAG,MAAZ,EAEA;;AACA,IAAIE,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,YAApC,CAAiD,IAAjD,CAAd;AAEAC,OAAO,CAACC,GAAR,CAAYf,gBAAgB,GAACQ,SAAjB,GAA2B,IAA3B,GAAgCE,OAA5C;AAEA,IAAIM,QAAQ,GAAGL,QAAQ,CAACM,sBAAT,CAAgC,aAAhC,CAAf;AAEAH,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEAU,KAAK,CAAClB,gBAAgB,GAACQ,SAAjB,GAA2B,IAA3B,GAAgCE,OAAjC,CAAL,CACKS,IADL,CACU,UAACC,IAAD;EAAA,OAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,CADV,EAEKF,IAFL,CAEU,UAACG,OAAD;EAAA,OAAaR,OAAO,CAACC,GAAR,CAAYO,OAAZ,CAAb;AAAA,CAFV,EAGKC,KAHL,CAGW,UAACC,GAAD;EAAA,OAASV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAT;AAAA,CAHX;;SAKeC;;;;;0EAAf,iBAAyBf,OAAzB,EAAkCF,SAAlC;IAAA;IAAA;MAAA;QAAA;UAAA;YAEQkB,GAFR,GAEc1B,gBAAgB,CAACC,MAAjB,CAAwBO,SAAxB,EAAkC,IAAlC,EAAuCE,OAAvC,CAFd;YAAA;YAAA,OAI2BQ,KAAK,CAACQ,GAAD,EAAM;cAC9BC,MAAM,EAAE,KADsB;cAE9BC,OAAO,EAAE;gBACL,UAAU;cADL;YAFqB,CAAN,CAJhC;;UAAA;YAIUC,QAJV;YAAA;YAAA,OAUwBA,QAAQ,CAACR,IAAT,EAVxB;;UAAA;YAUUS,KAVV;YAAA,iCAYWA,KAZX;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;;;AAcAhB,OAAO,CAACC,GAAR,CAAYU,SAAS,CAACf,OAAD,EAAUF,SAAV,CAArB,E","sources":["webpack://lnpedia/./src/sass/main.scss","webpack://lnpedia/webpack/bootstrap","webpack://lnpedia/webpack/runtime/make namespace object","webpack://lnpedia/./src/js/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// main.js\r\n\r\n//import './directory';\r\n\r\n//Import Styles\r\nimport '../sass/main.scss'\r\n\r\n//Import the Images\r\n\r\nvar site_url = window.location.origin;\r\nvar json_request_url = site_url.concat(\"/wordpress/wp-json/wp/v2/\");\r\nvar path = window.location.pathname;\r\n\r\nvar slug = path.substring(0, path.length-1);\r\nslug = slug.substring(slug.lastIndexOf(\"/\")+1);\r\n\r\n//Get the post_type\r\nvar post_type = path.substring(1, path.lastIndexOf(\"/\"));\r\npost_type = post_type.substring(post_type.indexOf(\"/\")+1, post_type.lastIndexOf(\"/\"));\r\n\r\nif( post_type == \"/\")\r\npost_type = \"post\";\r\n\r\n//Get the post id\r\nvar post_id = document.querySelector('.main-row').getAttribute('id');\r\n\r\nconsole.log(json_request_url+post_type+\"s/\"+post_id);\r\n\r\nvar ancestor = document.getElementsByClassName('volume-list');\r\n\r\nconsole.log(post_type)\r\n\r\n/*\r\nfor (const ans of ancestor[0].children) {\r\n    var id = ans.getAttribute('id')\r\n    console.log(id)\r\n}*/\r\n\r\n/*\r\nvar post = new wp.api.models.Post( { id: post_id} )\r\npost.fetch()\r\nconsole.log(post) */\r\n\r\nfetch(json_request_url+post_type+\"s/\"+post_id)\r\n    .then((data) => data.json())\r\n    .then((success) => console.log(success))\r\n    .catch((err) => console.log(err))\r\n\r\nasync function loadNames(post_id, post_type) {\r\n\r\n    var url = json_request_url.concat(post_type,\"s/\",post_id);\r\n\r\n    const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n    })\r\n    const names = await response.json();\r\n    // logs [{ name: 'Joker'}, { name: 'Batman' }]\r\n    return names;\r\n}\r\nconsole.log(loadNames(post_id, post_type));"],"names":["site_url","window","location","origin","json_request_url","concat","path","pathname","slug","substring","length","lastIndexOf","post_type","indexOf","post_id","document","querySelector","getAttribute","console","log","ancestor","getElementsByClassName","fetch","then","data","json","success","catch","err","loadNames","url","method","headers","response","names"],"sourceRoot":""}