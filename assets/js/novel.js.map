{"version":3,"file":"js/novel.js","mappings":"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","sources":["webpack://lnarchive/./src/js/post-type/novel.js"],"sourcesContent":["\r\n//get the Window information\r\nvar site_url = window.location.origin;\r\nvar json_request_url = site_url.concat(\"/wordpress/wp-json/wp/v2/\");\r\nvar path = window.location.pathname;\r\nvar slug = path.substring(0, path.length-1);\r\nslug = slug.substring(slug.lastIndexOf(\"/\")+1);\r\n\r\n//Get the post information\r\nvar post_type = \"novel\";\r\nvar post_id = document.querySelector('.main-row').getAttribute('id');\r\n\r\nReactDOM.render( <h2> Test </h2>,document.getElementById(\"reviews-list\") );\r\n\r\nconst comments_div = document.getElementById(\"reviews-list\");\r\n\r\nfetch( json_request_url+\"comments?post=\"+post_id )\r\n    .then( res => res.json())\r\n    .then( data => {\r\n        console.log(post_id)\r\n        console.log(data)\r\n    })\r\n\r\nnarrator_info_display(); ////Handle the display of narrator row\r\nformats_click_list( document.getElementsByClassName(\"format_button\") ); //Apply click event listeners to initial formats\r\n\r\n/*\r\n    Volumes Information Update\r\n*/\r\n\r\nlet volumes_list = document.getElementsByClassName(\"volume-link\"); //Get all the volumes of the novel\r\n\r\nfor( var i=0; i<volumes_list.length; i++){ //Loop through all the volumes\r\n    console.log(\"click\")\r\n\r\n    volumes_list[i].addEventListener('click', function() { //Listen to the click event on the volumes\r\n\r\n        fetch( json_request_url+\"volumes/\"+this.id+\"?_embed&_fields=title,excerpt,featured_media,_links,meta\" ) //Fetch the JSON data\r\n            .then( res => res.json()) //The fetch API Response\r\n            .then( data => { //The fetch api data\r\n                \r\n                document.querySelector(\".novel-cover\").srcset=data._embedded['wp:featuredmedia']['0'].source_url; //Update the Novel Cover\r\n                document.querySelector(\".page-title\").innerHTML = data.title.rendered; //Update the Novel Title\r\n                document.getElementById(\"novel-excerpt\").innerHTML = data.excerpt.rendered; //Update the Novel Desc\r\n                \r\n                var novel_terms = data._links['wp:term']; //Get all the taxonomies of the novel\r\n\r\n                for( var i=0; i<novel_terms.length; i++) { //Loop through all the taxonomimes\r\n\r\n                    var taxonomy_values = data._embedded['wp:term'][i]; //Get Taxonomy terms\r\n                    var element_id = novel_terms[i].taxonomy+\"_info_value\";\r\n                    const node = document.getElementById(element_id); //Get the taxonomy value parent node\r\n\r\n                    if( node == null) //If the node doesnt exist\r\n                    continue;\r\n\r\n                    node.innerHTML=\"\"; //Remove all the child elements since new elements will replace them\r\n                    \r\n                    for(var j=0; j<taxonomy_values.length; j++) { //Loop through all the taxonomy terms\r\n\r\n                        var tax_name = taxonomy_values[j].name;\r\n                        \r\n                        if( element_id != \"format_info_value\" ){\r\n                        const tax_val = document.createElement(\"a\"); //Create an anchor elements\r\n                        tax_val.innerText = tax_name; //Assign the innerText to the anchor tag\r\n                        tax_val.href = taxonomy_values[j].link; //Assign the Link to the anchor tag\r\n                        node.append(tax_val); //Append the anchor tag to the parent node\r\n                        node.append(document.createElement(\"br\")); //Append a line break so the values appear in different lines\r\n                        }\r\n                        else{\r\n                            if( j==0 ){ //The first format values are treated as default values\r\n                                document.getElementById(\"ISBN_info_value\").innerHTML = \"<a>\"+data.meta[\"isbn_\"+tax_name+\"_value\"][0]+\"</a>\"; //Assign Default ISBN on selection\r\n                                document.getElementById(\"Publication Date_info_value\").innerHTML = \"<a>\"+data.meta[\"published_date_value_\"+tax_name][0]+\"</a>\"; //Assign Default Publication Date on selection\r\n                            }\r\n                            const tax_val = document.createElement(\"button\"); //Create an anchor elements\r\n                            \r\n                            tax_val.innerText = tax_name; //Assign the insnerText to the anchor tags\r\n                            tax_val.className = tax_name+\"_format format_button\"; //ASssign classnames to the buttons\r\n                            tax_val.setAttribute( 'isbn', data.meta[\"isbn_\"+tax_name+\"_value\"][0] ); //Store the ISBN data in the button\r\n                            tax_val.setAttribute( 'publication_date', data.meta[\"published_date_value_\"+tax_name][0] ); //Store the publication date in the button\r\n                            node.append(tax_val); //Append the anchor tag to the parent node\r\n                        }\r\n                    }\r\n                }\r\n                narrator_info_display(); //Handle the display of narrator row\r\n                formats_click_list(document.getElementsByClassName(\"format_button\")); //Apply click eventListeners to new formats\r\n                window.scrollTo(0, 0); //Scroll to the top\r\n            })\r\n    }\r\n    );\r\n} \r\n\r\ndocument.getElementById(\"volumes-no\").innerText= \"Volumes - \".concat(document.getElementById(\"volume-list\").children.length)  //Update the number of volumes information\r\n\r\nfunction formats_click_list( format_buttons ) { //Function to apply Event Listeners to all formats and store ISBN and publication values in the format buttons\r\n    for( var i=0; i<format_buttons.length; i++) { //Loop through all the possible format buttons\r\n        format_buttons[i].addEventListener('click', function() { //Listen to click event\r\n            document.getElementById(\"ISBN_info_value\").innerHTML = \"<a>\"+this.getAttribute(\"isbn\")+\"</a>\"; //Update the Volume ISBN for format\r\n            document.getElementById(\"Publication Date_info_value\").innerHTML = \"<a>\"+this.getAttribute(\"publication_date\")+\"</a>\"; //Update the Volume Publication Date for format\r\n        });\r\n    }\r\n}\r\n\r\nfunction narrator_info_display() { //Function to handle visibility of the narrator row\r\n    if( document.getElementsByClassName(\"Audiobook_format\").length == 0) //If the volume of the novel does not have a audiobook format\r\n        document.getElementById(\"Narrator_row\").style.display = 'none'; //Hide the Narrator column from view\r\n    else //If the volume of the novel has audiobook format\r\n        document.getElementById(\"Narrator_row\").style.display = 'table-row'; //Display the Narrator column\r\n}"],"names":["json_request_url","window","location","origin","concat","path","pathname","slug","substring","length","lastIndexOf","post_id","document","querySelector","getAttribute","ReactDOM","render","getElementById","fetch","then","res","json","data","console","log","narrator_info_display","formats_click_list","getElementsByClassName","volumes_list","i","addEventListener","this","id","srcset","_embedded","source_url","innerHTML","title","rendered","excerpt","novel_terms","_links","taxonomy_values","element_id","taxonomy","node","j","tax_name","name","tax_val","createElement","innerText","href","link","append","meta","className","setAttribute","scrollTo","format_buttons","style","display","children"],"sourceRoot":""}