{"version":3,"file":"js/novel.js","mappings":"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","sources":["webpack://lnarchive/./src/js/post-type/novel.js"],"sourcesContent":["\r\n//get the Window information\r\nvar site_url = window.location.origin;\r\nvar json_request_url = site_url.concat(\"/wordpress/wp-json/wp/v2/\");\r\nvar path = window.location.pathname;\r\nvar slug = path.substring(0, path.length-1);\r\nslug = slug.substring(slug.lastIndexOf(\"/\")+1);\r\n\r\n//Get the post information\r\nvar post_type = \"novel\";\r\nvar post_id = document.querySelector('.main-row').getAttribute('id');\r\n\r\nfunction Comment_card( props ){\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"review-left col-3 col-sm-2 col-md-2 col-lg-1\">\r\n                <img className=\"user_avatar\" srcset={props.author_avatar}></img>\r\n            </div>\r\n            <div className=\"review-right col\">\r\n                <div className=\"review-header row\">\r\n                    <h4 className=\"col-lg-9\">{props.author_name.charAt(0).toUpperCase() + props.author_name.slice(1)}</h4>\r\n                    <time className=\"col\">{props.date.slice(0, props.date.indexOf('T'))}</time>\r\n                </div>\r\n                <div className=\"review-content\" dangerouslySetInnerHTML={{__html: props.content}}/>\r\n                <div className=\"review-footer\">\r\n                        <i class=\"fa-solid fa-thumbs-up\"></i>\r\n                        <i class=\"fa-solid fa-thumbs-down\"></i>     \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst comments_div = document.getElementById(\"reviews-list\");\r\n\r\nfetch( json_request_url+\"comments?post=\"+post_id )\r\n    .then( res => res.json())\r\n    .then( data => {\r\n        console.log(post_id)\r\n        console.log(data)\r\n\r\n        for( var i=0; i<data.length; i++){\r\n            var comment_entry = document.createElement(\"div\");\r\n            comment_entry.className=\"review-entry\"\r\n            comment_entry.id=data[i].id;\r\n            document.getElementById(\"reviews-list\").append(comment_entry);\r\n            console\r\n            ReactDOM.render( <Comment_card comment_id={data[i].id} author_avatar={data[i].author_avatar_urls['96']} author_name={data[i].author_name} date={data[i].date} content={data[i].content.rendered}></Comment_card>, comment_entry );\r\n        }\r\n    })\r\n\r\n\r\nvar selected_format = document.getElementsByClassName(\"selected_format\")[0]; //Get the Selected format element\r\n   \r\nnarrator_info_display(); ////Handle the display of narrator row\r\nformats_click_list( document.getElementsByClassName(\"format_button\") ); //Apply click event listeners to initial formats\r\n\r\n/*\r\n    Volumes Information Update\r\n*/\r\n\r\nlet volumes_list = document.getElementsByClassName(\"volume-link\"); //Get all the volumes of the novel\r\n\r\nfor( var i=0; i<volumes_list.length; i++){ //Loop through all the volumes\r\n    console.log(\"click\")\r\n\r\n    volumes_list[i].addEventListener('click', function() { //Listen to the click event on the volumes\r\n\r\n        fetch( json_request_url+\"volumes/\"+this.id+\"?_embed&_fields=title,excerpt,featured_media,_links,meta\" ) //Fetch the JSON data\r\n            .then( res => res.json()) //The fetch API Response\r\n            .then( data => { //The fetch api data\r\n                \r\n                document.querySelector(\".novel-cover\").srcset=data._embedded['wp:featuredmedia']['0'].source_url; //Update the Novel Cover\r\n                document.querySelector(\".page-title\").innerHTML = data.title.rendered; //Update the Novel Title\r\n                document.getElementById(\"novel-excerpt\").innerHTML = data.excerpt.rendered; //Update the Novel Desc\r\n                \r\n                var novel_terms = data._links['wp:term']; //Get all the taxonomies of the novel\r\n\r\n                for( var i=0; i<novel_terms.length; i++) { //Loop through all the taxonomimes\r\n\r\n                    var taxonomy_values = data._embedded['wp:term'][i]; //Get Taxonomy terms\r\n                    var element_id = novel_terms[i].taxonomy+\"_info_value\";\r\n                    const node = document.getElementById(element_id); //Get the taxonomy value parent node\r\n\r\n                    if( node == null) //If the node doesnt exist\r\n                    continue;\r\n\r\n                    node.innerHTML=\"\"; //Remove all the child elements since new elements will replace them\r\n                    \r\n                    for(var j=0; j<taxonomy_values.length; j++) { //Loop through all the taxonomy terms\r\n\r\n                        var tax_name = taxonomy_values[j].name;\r\n                        \r\n                        if( element_id != \"format_info_value\" ){ //For all other taxonomies except the format\r\n                        const tax_val = document.createElement(\"a\"); //Create an anchor elements\r\n                        tax_val.innerText = tax_name; //Assign the innerText to the anchor tag\r\n                        tax_val.href = taxonomy_values[j].link; //Assign the Link to the anchor tag\r\n                        node.append(tax_val); //Append the anchor tag to the parent node\r\n                        node.append(document.createElement(\"br\")); //Append a line break so the values appear in different lines\r\n                        }\r\n                        else{\r\n                            \r\n                            const tax_val = document.createElement(\"button\"); //Create an anchor elements\r\n                            \r\n                            tax_val.innerText = tax_name; //Assign the insnerText to the anchor tags\r\n                            tax_val.className = tax_name+\"_format format_button\"; //ASssign classnames to the buttons\r\n                            tax_val.setAttribute( 'isbn', data.meta[\"isbn_\"+tax_name+\"_value\"][0] ); //Store the ISBN data in the button\r\n                            tax_val.setAttribute( 'publication_date', data.meta[\"published_date_value_\"+tax_name][0] ); //Store the publication date in the button\r\n                            node.append(tax_val); //Append the anchor tag to the parent node\r\n\r\n                            if( j==0 ){ //The first format values are treated as default values\r\n                                document.getElementById(\"ISBN_info_value\").innerHTML = \"<a>\"+data.meta[\"isbn_\"+tax_name+\"_value\"][0]+\"</a>\"; //Assign Default ISBN on selection\r\n                                document.getElementById(\"Publication Date_info_value\").innerHTML = \"<a>\"+data.meta[\"published_date_value_\"+tax_name][0]+\"</a>\"; //Assign Default Publication Date on selection\r\n                                selected_format = document.getElementsByClassName(tax_name+\"_format format_button\")[0]; //Update the selected format global variable\r\n                                selected_format.classList.add(\"selected_format\"); //Assign the relvant class to the selected variable\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                narrator_info_display(); //Handle the display of narrator row\r\n                formats_click_list(document.getElementsByClassName(\"format_button\")); //Apply click eventListeners to new formats\r\n                window.scrollTo(0, 0); //Scroll to the top\r\n            })\r\n    }\r\n    );\r\n} \r\n\r\ndocument.getElementById(\"volumes-no\").innerText= \"Volumes - \".concat(document.getElementById(\"volume-list\").children.length)  //Update the number of volumes information\r\n\r\nfunction formats_click_list( format_buttons ) { //Function to apply Event Listeners to all formats and store ISBN and publication values in the format buttons\r\n    for( var i=0; i<format_buttons.length; i++) { //Loop through all the possible format buttons\r\n        format_buttons[i].addEventListener('click', function() { //Listen to click event\r\n            document.getElementById(\"ISBN_info_value\").innerHTML = \"<a>\"+this.getAttribute(\"isbn\")+\"</a>\"; //Update the Volume ISBN for format\r\n            document.getElementById(\"Publication Date_info_value\").innerHTML = \"<a>\"+this.getAttribute(\"publication_date\")+\"</a>\"; //Update the Volume Publication Date for format\r\n            selected_format.classList.remove(\"selected_format\"); //Remove the relevant class from the old element\r\n            selected_format = this; //Update the selected_format global var\r\n            selected_format.classList.add(\"selected_format\"); //Add the relevant class to the element which was clicked that is the selected format\r\n            narrator_info_display(); //Handle the display of narrator row\r\n        });\r\n    }\r\n}\r\n\r\nfunction narrator_info_display() { //Function to handle visibility of the narrator row\r\n    if( document.getElementsByClassName(\"Audiobook_format\")[0] != undefined && document.getElementsByClassName(\"Audiobook_format\")[0].classList[2] != \"selected_format\") //If the volume of the novel does not have a audiobook format or if the Audiobook formated is not selected\r\n        document.getElementById(\"Narrator_row\").style.display = 'none'; //Hide the Narrator column from view     \r\n    else //If the volume of the novel has audiobook format\r\n        document.getElementById(\"Narrator_row\").style.display = 'table-row'; //Display the Narrator column\r\n}"],"names":["json_request_url","window","location","origin","concat","path","pathname","slug","substring","length","lastIndexOf","post_id","document","querySelector","getAttribute","Comment_card","props","className","srcset","author_avatar","author_name","charAt","toUpperCase","slice","date","indexOf","dangerouslySetInnerHTML","__html","content","class","getElementById","fetch","then","res","json","data","console","log","i","comment_entry","createElement","id","append","ReactDOM","render","comment_id","author_avatar_urls","rendered","selected_format","getElementsByClassName","narrator_info_display","formats_click_list","volumes_list","addEventListener","this","_embedded","source_url","innerHTML","title","excerpt","novel_terms","_links","taxonomy_values","element_id","taxonomy","node","j","tax_name","name","tax_val","innerText","href","link","setAttribute","meta","classList","add","scrollTo","format_buttons","remove","undefined","style","display","children"],"sourceRoot":""}