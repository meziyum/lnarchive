{"version":3,"file":"css/editor.css","mappings":"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","sources":["webpack://lnpedia/./src/library/fonts/fonts.css","webpack://lnpedia/./src/sass/0-settings/_colors.scss","webpack://lnpedia/./src/sass/editor.scss","webpack://lnpedia/./src/sass/0-settings/_typography.scss","webpack://lnpedia/./src/sass/1-tools/_mixins.scss","webpack://lnpedia/./src/sass/2-generic/_elements.scss","webpack://lnpedia/./node_modules/sass-mq/_mq.scss"],"sourcesContent":["/* open-sans-regular - latin */\r\n@font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    src: url('open-sans/open-sans-v29-latin-regular.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-regular.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-regular.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }\r\n  /* open-sans-500 - latin */\r\n  @font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    src: url('open-sans/open-sans-v29-latin-500.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-500.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-500.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-500.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-500.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-500.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }\r\n  /* open-sans-700 - latin */\r\n  @font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    src: url('open-sans/open-sans-v29-latin-700.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-700.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-700.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-700.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-700.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-700.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }\r\n  /* open-sans-italic - latin */\r\n  @font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: italic;\r\n    font-weight: 400;\r\n    src: url('open-sans/open-sans-v29-latin-italic.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-italic.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-italic.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-italic.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-italic.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-italic.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }\r\n  /* open-sans-500italic - latin */\r\n  @font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: italic;\r\n    font-weight: 500;\r\n    src: url('open-sans/open-sans-v29-latin-500italic.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-500italic.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-500italic.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-500italic.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-500italic.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-500italic.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }\r\n  /* open-sans-700italic - latin */\r\n  @font-face {\r\n    font-family: 'Open Sans';\r\n    font-style: italic;\r\n    font-weight: 700;\r\n    src: url('open-sans/open-sans-v29-latin-700italic.eot'); /* IE9 Compat Modes */\r\n    src: local(''),\r\n         url('open-sans/open-sans-v29-latin-700italic.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n         url('open-sans/open-sans-v29-latin-700italic.woff2') format('woff2'), /* Super Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-700italic.woff') format('woff'), /* Modern Browsers */\r\n         url('open-sans/open-sans-v29-latin-700italic.ttf') format('truetype'), /* Safari, Android, iOS */\r\n         url('open-sans/open-sans-v29-latin-700italic.svg#OpenSans') format('svg'); /* Legacy iOS */\r\n  }","\n/*---------------------------------\n\t\tColors Variables\n-----------------------------------*/\n\n$black: #000;\n$black-900: #3d3d3d;\n$black-860: #595858;\n$black-850: #323232;\n$black-800: #414042;\n$black-600: #3d3e40;\n$black-700: #595959;\n$black-100: #282828;\n$black-50: #5d5d5d;\n\n$white: #fff;\n\n$dark-gray-200: #333;\n$dark-gray-100: #424242;\n\n$gray-100: #eff3f6;\n$gray-150: #eee;\n$gray-160: #e2eaee;\n$gray-200: #ccc;\n$gray-300: #555;\n\n$blue-900: #3344d9;\n$blue-800: #322ebb;\n$blue-500: #355180;\n$blue-300: #6258d5;\n$blue-200: #0673a9;\n$blue-100: #0192cc;\n$blue-80: #0183c6;\n$blue-40: #2791db;\n$blue-50: #39a7e2;\n$blue-40: #38affd;\n$blue-20: #e4f3fd;\n\n$purple-800: #4046ff;\n\n/*---------------------------------\n\t\tOpacity\n-----------------------------------*/\n\n$opacity-black-075: rgba(0, 0, 0, 0.075);\n$opacity-black-015: rgba(0, 0, 0, 0.15);\n\n/*---------------------------------\n\t\tGradient\n-----------------------------------*/\n\n$header-gradient: linear-gradient(to bottom, $black-900 0%, $black-100 100%);\n$link-hover-gradient: linear-gradient(to bottom, $blue-100 0%, $blue-200 100%);\n\n/*---------------------------------\n\t\tElement Colors\n-----------------------------------*/\n\n// <body>\n$color__body-text: $black-800;\n$color__background-body: $white;\n\n// <a>\n$color__link: $blue-100;\n$color__link-hover: $blue-500;\n\n$color__background-button: $gray-100;\n$color__background-button-hover: $gray-100;\n$color__border-button: $dark-gray-200;\n$color__border-button-hover: $black;\n\n$color__border-input: $gray-100;\n$color__text-input: $dark-gray-200;\n$color__text-input-focus: $black;\n\n// <pre>, <code>\n$color__background-pre: $gray-100;\n\n// <hr>\n$color__background-hr: $gray-150;\n$color__background-table: $blue-20;\n\n/*---------------------------------\n\t\tBorder Colors\n-----------------------------------*/\n\n$color__border-light: $gray-100;\n$color__border-fieldset: $gray-200;\n$color__border-table: $gray-200;\n$color__border-header: $gray-300;\n","//Editor Styles\r\n@import \"5-editor/editor\";","\n/*----------------\n\t\tFont\n------------------*/\n\n// Global theme font.\n$font__main: \"Open Sans\", sans-serif;\n\n// Global code font\n$font__code: \"Open Sans\", sans-serif, monospace;\n\n// Fallback font when font is not loaded via WebFonts JS.\n$font__fallback: sans-serif;\n\n// Base line height.\n$font__base-line-height: 30px;\n\n/*---------------------------------\n\t\tBody Text Font Sizes\n-----------------------------------*/\n\n$body-text: (\n\t\"h1\": (\n\t\t\"small\": (\n\t\t\tfont-size: 31.5px,\n\t\t\tline-height: 1.27,\n\t\t),\n\t),\n\t\"h2\": (\n\t\t\"small\": (\n\t\t\tfont-size: 31.5px,\n\t\t\tline-height: 1,\n\t\t),\n\t),\n\t\"h3\": (\n\t\t\"small\": (\n\t\t\tfont-size: 24.5px,\n\t\t\tline-height: 1.27,\n\t\t),\n\t),\n\t\"h4\": (\n\t\t\"small\": (\n\t\t\tfont-size: 17.5px,\n\t\t\tline-height: 1.142,\n\t\t),\n\t),\n\t\"h5\": (\n\t\t\"small\": (\n\t\t\tfont-size: 14px,\n\t\t\tline-height: 1.43,\n\t\t),\n\t),\n\t\"h6\": (\n\t\t\"small\": (\n\t\t\tfont-size: 11.9px,\n\t\t\tline-height: 1.681,\n\t\t),\n\t),\n\t\"body\": (\n\t\t\"small\": (\n\t\t\tfont-size: 16px,\n\t\t\tline-height: 1.43,\n\t\t),\n\t\t\"large\": (\n\t\t\tfont-size: 18px,\n\t\t\tline-height: 1.43,\n\t\t),\n\t),\n\t\"l\": (\n\t\t\"small\": (\n\t\t\tfont-size: 18px,\n\t\t),\n\t),\n\t\"m\": (\n\t\t\"small\": (\n\t\t\tfont-size: 16px,\n\t\t),\n\t),\n\t\"s\": (\n\t\t\"small\": (\n\t\t\tfont-size: 12px,\n\t\t),\n\t),\n\t\"xs\": (\n\t\t\"small\": (\n\t\t\tfont-size: 11px,\n\t\t),\n\t),\n);\n","// Center block\n@mixin center-block {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n@mixin font-smoothing() {\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n}\n\n@mixin font-family( $font: $font__main ) {\n\tfont-family: $font__main;\n}\n\n/**\n * Add font scale with media query as per configuration on $body-text\n * Ex: @include body-text( h1 );\n * This will add font-size and line-height with different breakpoints.\n */\n@mixin body-text( $level: normal, $body-text: $body-text, $device-size: false ) {\n\t@if type-of($body-text) != \"map\" {\n\t\t@error \"`#{$body-text}` is not a valid value for $values. It must be a list.\";\n\t}\n\n\t$size: map_get($body-text, $level);\n\n\t@if type-of($size) == \"map\" {\n\n\t\t@if $device-size == false {\n\t\t\t@each $device, $values in $size {\n\n\t\t\t\t@if $device != \"small\" {\n\t\t\t\t\t@include mq($from: $device) {\n\t\t\t\t\t\tfont-size: map_get($values, \"font-size\");\n\t\t\t\t\t\tline-height: map_get($values, \"line-height\");\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\tfont-size: map_get($values, \"font-size\");\n\t\t\t\t\tline-height: map_get($values, \"line-height\");\n\t\t\t\t}\n\t\t\t}\n\t\t} @else {\n\t\t\t$device_values: map_get($size, $device-size);\n\n\t\t\tfont-size: map_get($device_values, \"font-size\");\n\t\t\tline-height: map_get($device_values, \"line-height\");\n\t\t}\n\t}\n}\n\n@mixin truncate( $lines_to_show: 3 ) {\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: $lines_to_show;\n\t-webkit-box-orient: vertical;\n\toverflow: hidden;\n}\n","// View applied styles by going to https://your-site.com/wp-content/themes/videojet/assets/style-guide/elements.html\n\nhtml {\n\tbox-sizing: border-box;\n\t-ms-text-size-adjust: 100%;\n\t-webkit-text-size-adjust: 100%;\n}\n\n/* stylelint-disable */\n*,\n*:before,\n*:after {\n\t/* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\n\tbox-sizing: inherit;\n\n\t-webkit-tap-highlight-color: rgba(0,0,0,0);\n}\n/* stylelint-enable */\n\n/**\n * 1. Fallback for when there is no custom background color defined. [WordPress]\n * 2. Remove default margin. [normalize.css]\n * 3. Set the base elements `font-size` to the value of your choosing.\n * 4. Work out the unitless `line-height` for your project based around your\n *    desired `line-height` (defined previously in pixels), and your projects\n *    base font size.\n */\nbody {\n\tmargin: 0;\n\t@include font-family();\n\t@include body-text( body );\n\n\tbackground: $color__background-body;\n\tcolor: $color__body-text;\n\n\t// WP Editor\n\t&.mce-content-body {\n\t\tfont-family: inherit;\n\t\tmargin: 15px;\n\t}\n}\n\n// Gutenberg block quote support.\nblockquote,\nq,\nblockquote.wp-block-quote {\n\tquotes: \"\" \"\";\n\tborder-left: 4px solid $gray-150;\n\tfont-style: italic;\n\tmargin: 0 0 $font__base-line-height $font__base-line-height;\n\tpadding-left: 16px;\n\tbackground: transparent;\n\ttext-align: left;\n\n\tp {\n\t\tfont-size: 16px;\n\t\tfont-style: normal;\n\t\tfont-weight: 400;\n\t}\n\n\t/* stylelint-disable */\n\tcite,\n\t.wp-block-quote__citation {\n\t\tdisplay: block;\n\t\tfont-size: 16px;\n\t\tfont-weight: 700;\n\t\tmargin-top: 12px;\n\t\ttext-transform: uppercase;\n\t}\n\t/* stylelint-enable */\n\n\tp:last-of-type {\n\t\tmargin-bottom: 0;\n\t}\n\n\t&.is-large,\n\t&.is-style-large {\n\t\tmargin: 0 auto;\n\n\t}\n\n}\n\n/* Pull Quote\n--------------------------------------------- */\n\n.wp-block-pullquote {\n\tborder: none;\n\tpadding: 0;\n\n\tblockquote {\n\t\tborder-left: 0;\n\t\tborder-top: 8px solid $gray-150;\n\t\tborder-bottom: 8px solid $gray-150;\n\t\tpadding: 16px 0;\n\t\ttext-align: center;\n\t\tmax-width: 50%;\n\t\tmargin: 0 auto;\n\t}\n\n\t&.alignleft,\n\t&.alignright {\n\n\t\tblockquote {\n\t\t\tmax-width: 100%;\n\t\t}\n\t}\n}\n\nimg {\n\theight: auto;\n\tmax-width: 100%;\n\tvertical-align: middle;\n}\n\n/* Image Support\n--------------------------------------------- */\n.wp-block-image {\n\t&.size-medium,\n\t&.size-thumbnail,\n\t&.is-resized {\n\t\timg {\n\t\t\twidth: auto;\n\t\t}\n\t}\n\n\tfigcaption {\n\t\ttext-align: left;\n\t\tpadding: 10px 0;\n\t}\n}\n\nfigure {\n\tmax-width: 100%;\n}\n\na {\n\tcursor: pointer;\n\tcolor: $color__link;\n\ttext-decoration: none;\n\ttransition: 0.3s;\n\n\t&:focus {\n\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\toutline-offset: -2px;\n\t}\n\n\t&:hover,\n\ta:active {\n\t\tcolor: $color__link-hover;\n\t\ttext-decoration: underline;\n\t\toutline: 0;\n\t}\n}\n\nsub,\nsup {\n\tposition: relative;\n\tfont-size: 75%;\n\tline-height: 0;\n\tvertical-align: baseline;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\n/*------------------------------------*\\\n    #HEADINGS\n\\*------------------------------------*/\n/* stylelint-disable */\nh1 {\n\t@include body-text( h1 )\n}\n\nh2 {\n\t@include body-text( h2 )\n}\n\nh3 {\n\t@include body-text( h3 )\n}\n\nh4 {\n\t@include body-text( h4 )\n}\n\nh5 {\n\t@include body-text( h5 )\n}\n\nh6 {\n\t@include body-text( h6 )\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tmargin: 10px 0;\n\ttext-rendering: optimizelegibility;\n}\n\n/*---------------------------\n\t\tLists\n---------------------------*/\n\nul,\nol {\n\tmargin: 0 0 18px 0;\n\n\t&.no-bullet {\n\t\t&,\n\t\tul,\n\t\tol {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tlist-style: none;\n\t\t}\n\t}\n}\n\nul {\n\tpadding: 0;\n\tmargin: 0 0 10px 25px;\n\n\t@include mq( medium ) {\n\t\tmargin: 0 0 5px 0;\n\t}\n}\n\nli > ul,\nli > ol {\n\tmargin-bottom: 0;\n\tmargin-left: 18px;\n}\n\ndt {\n\tfont-weight: 700;\n}\n\ndd {\n\tmargin: 0 24px 24px;\n}\n\np {\n\t&:empty {\n\t\tdisplay: none;\n\t}\n}\n\nli > ul,\nli > ol {\n\tmargin-bottom: 0;\n}\n\n/*------------------------------------*\\\n    #TABLE\n\\*------------------------------------*/\n\ntable {\n\tmax-width: 100%;\n\tbackground-color: transparent;\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n\n\t@include mq( medium ) {\n\t\tmax-width: 350px;\n\t}\n}\n\n/* Button\n--------------------------------------------- */\n\n.wp-block-button {\n\n\t.wp-block-button__link {\n\t\tborder-radius: 0;\n\t\tfont-weight: 700;\n\t\tfont-size: 16px;\n\t\tline-height: 18px;\n\t\tpadding: 20px 24px;\n\n\t\t&:hover {\n\t\t\tbackground: $gray-200;\n\t\t\ttext-decoration: none;\n\t\t}\n\n\t}\n}\n/* stylelint-enable */\n\n/*------------------------------------*\\\n    Form Fields\n\\*------------------------------------*/\n\ninput,\nbutton,\nselect,\ntextarea {\n\tfont-family: $font__main;\n}\n\nselect,\ntextarea,\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"datetime\"],\ninput[type=\"datetime-local\"],\ninput[type=\"date\"],\ninput[type=\"month\"],\ninput[type=\"time\"],\ninput[type=\"week\"],\ninput[type=\"number\"],\ninput[type=\"email\"],\ninput[type=\"url\"],\ninput[type=\"search\"],\ninput[type=\"tel\"],\ninput[type=\"color\"],\n.uneditable-input {\n\tdisplay: inline-block;\n\theight: 20px;\n\twidth: 206px;\n\tpadding: 14px 6px; /* adjusting border-box difference on live site */\n\tmargin: 0 0 10px;\n\tline-height: 1.43;\n\tcolor: $gray-300;\n\tvertical-align: middle;\n\tborder-radius: 4px;\n\tbackground-color: $white;\n\tborder: 1px solid $gray-200;\n\tbox-shadow: inset 0 1px 1px $opacity-black-075;\n\ttransition: border linear 0.2s, box-shadow linear 0.2s;\n}\n\ntextarea {\n\theight: auto;\n\tpadding: 4px 6px;\n\tmax-width: 100%;\n\toutline: none;\n\toverflow: auto; // Remove the default vertical scrollbar in IE 10+.\n}\n\nselect {\n\tbox-shadow: none;\n\ttransition: none;\n\twidth: 220px;\n\tpadding: 0 6px;\n}\n\nselect,\ninput[type=\"file\"] {\n\theight: 30px;\n\tline-height: 2.15;\n}\n\nbutton {\n\tmargin: 0;\n}\n\nlabel {\n\tdisplay: block;\n\tmargin-bottom: 5px;\n}\n\nlabel,\ninput,\nbutton,\nselect,\ntextarea {\n\t@include body-text( body );\n\tfont-weight: 400;\n}\n\nlabel,\nselect,\nbutton,\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"],\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n\tcursor: pointer;\n}\n\ninput[type=\"search\"] {\n\t-webkit-appearance: textfield;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button {\n\t-webkit-appearance: none;\n}\n\n/*------------------------------------*\\\n    #OTHER\n\\*------------------------------------*/\n\npre {\n\tdisplay: block;\n\tpadding: 9.5px;\n\tmargin: 0 0 10px;\n\tfont-size: 13px; // Exceptional font-size.\n\tline-height: 1.54;\n\tword-break: break-all;\n\tword-wrap: break-word;\n\twhite-space: pre-wrap;\n\tbackground-color: $gray-160;\n\tborder: 1px solid $opacity-black-015;\n\tborder-radius: 4px;\n\tfont-family: $font__code;\n}\n\ncode {\n\tpadding: 2px 4px;\n\tcolor: #d14;\n\twhite-space: nowrap;\n\tbackground-color: #f7f7f9;\n\tborder: 1px solid #e1e1e8;\n\tfont-family: $font__code;\n\t@include body-text( s );\n\tborder-radius: 3px;\n}\n\n/* Separator\n--------------------------------------------- */\n\n.wp-block-separator,\nhr {\n\n\twidth: 100%;\n\tmargin: 20px 0;\n\tborder: 0;\n\tborder-top: 1px solid $color__background-hr;\n\tborder-bottom: 1px solid $white;\n\tbox-sizing: content-box;\n\n\t&:not(.is-style-dots) {\n\t\tbackground-color: $gray-100;\n\t\tborder: 0;\n\t\theight: 1px;\n\t}\n\n\t&:not(.is-style-wide):not(.is-style-dots) {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tbackground: transparent;\n\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tdisplay: block;\n\t\t\theight: 4px;\n\t\t\twidth: 40px;\n\t\t\tbackground: $gray-100;\n\t\t}\n\t}\n\n\t&.is-style-dots::before {\n\t\tcolor: $gray-100;\n\t\tfont-size: 18px;\n\t\tletter-spacing: 12px;\n\t\tpadding-left: 12px;\n\t}\n}","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n"],"names":[],"sourceRoot":""}